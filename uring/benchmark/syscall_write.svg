<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="470" onload="init(evt)" viewBox="0 0 1200 470" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="470.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Syscall buffered write</text>
<text id="details" x="10.00" y="453" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="453" > </text>
<g id="frames">
<g >
<title>current_time (1 samples, 0.03%)</title><rect x="845.1" y="213" width="0.3" height="15.0" fill="rgb(243,167,20)" rx="2" ry="2" />
<text  x="848.12" y="223.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (30 samples, 0.81%)</title><rect x="1138.0" y="341" width="9.6" height="15.0" fill="rgb(207,164,53)" rx="2" ry="2" />
<text  x="1141.04" y="351.5" ></text>
</g>
<g >
<title>snprintf@plt (1 samples, 0.03%)</title><rect x="1185.9" y="389" width="0.3" height="15.0" fill="rgb(247,84,17)" rx="2" ry="2" />
<text  x="1188.86" y="399.5" ></text>
</g>
<g >
<title>__strlen_avx2 (19 samples, 0.51%)</title><rect x="56.5" y="357" width="6.1" height="15.0" fill="rgb(251,32,32)" rx="2" ry="2" />
<text  x="59.54" y="367.5" ></text>
</g>
<g >
<title>rcu_all_qs (3 samples, 0.08%)</title><rect x="1101.7" y="229" width="1.0" height="15.0" fill="rgb(225,215,53)" rx="2" ry="2" />
<text  x="1104.71" y="239.5" ></text>
</g>
<g >
<title>[unknown] (528 samples, 14.26%)</title><rect x="10.0" y="389" width="168.3" height="15.0" fill="rgb(217,155,47)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >[unknown]</text>
</g>
<g >
<title>dl_main (1 samples, 0.03%)</title><rect x="173.2" y="357" width="0.3" height="15.0" fill="rgb(218,187,8)" rx="2" ry="2" />
<text  x="176.20" y="367.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (6 samples, 0.16%)</title><rect x="769.3" y="293" width="1.9" height="15.0" fill="rgb(238,121,38)" rx="2" ry="2" />
<text  x="772.25" y="303.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (21 samples, 0.57%)</title><rect x="595.5" y="181" width="6.7" height="15.0" fill="rgb(230,185,23)" rx="2" ry="2" />
<text  x="598.54" y="191.5" ></text>
</g>
<g >
<title>memcpy_erms (7 samples, 0.19%)</title><rect x="759.7" y="277" width="2.2" height="15.0" fill="rgb(232,75,27)" rx="2" ry="2" />
<text  x="762.69" y="287.5" ></text>
</g>
<g >
<title>up_write (21 samples, 0.57%)</title><rect x="1109.0" y="261" width="6.7" height="15.0" fill="rgb(234,145,24)" rx="2" ry="2" />
<text  x="1112.04" y="271.5" ></text>
</g>
<g >
<title>ext4_da_write_end (193 samples, 5.21%)</title><rect x="1000.7" y="229" width="61.5" height="15.0" fill="rgb(241,4,3)" rx="2" ry="2" />
<text  x="1003.66" y="239.5" >ext4_d..</text>
</g>
<g >
<title>file_remove_privs (10 samples, 0.27%)</title><rect x="845.4" y="213" width="3.2" height="15.0" fill="rgb(218,99,37)" rx="2" ry="2" />
<text  x="848.43" y="223.5" ></text>
</g>
<g >
<title>bench_syscall_w (3,702 samples, 100.00%)</title><rect x="10.0" y="405" width="1180.0" height="15.0" fill="rgb(230,45,29)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >bench_syscall_w</text>
</g>
<g >
<title>do_sys_open (1 samples, 0.03%)</title><rect x="1166.4" y="309" width="0.3" height="15.0" fill="rgb(228,108,12)" rx="2" ry="2" />
<text  x="1169.41" y="319.5" ></text>
</g>
<g >
<title>fsnotify_destroy_event.part.0 (165 samples, 4.46%)</title><rect x="611.8" y="213" width="52.6" height="15.0" fill="rgb(221,2,25)" rx="2" ry="2" />
<text  x="614.79" y="223.5" >fsnot..</text>
</g>
<g >
<title>inotify_merge (21 samples, 0.57%)</title><rect x="671.1" y="229" width="6.7" height="15.0" fill="rgb(219,194,0)" rx="2" ry="2" />
<text  x="674.08" y="239.5" ></text>
</g>
<g >
<title>page_counter_uncharge (1 samples, 0.03%)</title><rect x="661.8" y="85" width="0.4" height="15.0" fill="rgb(232,157,44)" rx="2" ry="2" />
<text  x="664.84" y="95.5" ></text>
</g>
<g >
<title>free@plt (3 samples, 0.08%)</title><rect x="1175.3" y="389" width="1.0" height="15.0" fill="rgb(226,3,29)" rx="2" ry="2" />
<text  x="1178.34" y="399.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (24 samples, 0.65%)</title><rect x="1139.0" y="325" width="7.7" height="15.0" fill="rgb(234,195,6)" rx="2" ry="2" />
<text  x="1142.00" y="335.5" ></text>
</g>
<g >
<title>page_counter_try_charge (1 samples, 0.03%)</title><rect x="558.2" y="165" width="0.4" height="15.0" fill="rgb(231,59,7)" rx="2" ry="2" />
<text  x="561.24" y="175.5" ></text>
</g>
<g >
<title>__cond_resched (1 samples, 0.03%)</title><rect x="980.6" y="181" width="0.3" height="15.0" fill="rgb(208,94,51)" rx="2" ry="2" />
<text  x="983.58" y="191.5" ></text>
</g>
<g >
<title>dget_parent (82 samples, 2.22%)</title><rect x="294.3" y="277" width="26.2" height="15.0" fill="rgb(235,205,17)" rx="2" ry="2" />
<text  x="297.32" y="287.5" >d..</text>
</g>
<g >
<title>fsnotify_destroy_event (1 samples, 0.03%)</title><rect x="607.3" y="229" width="0.3" height="15.0" fill="rgb(253,229,54)" rx="2" ry="2" />
<text  x="610.33" y="239.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.03%)</title><rect x="515.9" y="85" width="0.3" height="15.0" fill="rgb(207,147,11)" rx="2" ry="2" />
<text  x="518.85" y="95.5" ></text>
</g>
<g >
<title>page_counter_try_charge (2 samples, 0.05%)</title><rect x="557.3" y="181" width="0.6" height="15.0" fill="rgb(242,32,12)" rx="2" ry="2" />
<text  x="560.29" y="191.5" ></text>
</g>
<g >
<title>mmput (1 samples, 0.03%)</title><rect x="1175.0" y="309" width="0.3" height="15.0" fill="rgb(231,181,25)" rx="2" ry="2" />
<text  x="1178.02" y="319.5" ></text>
</g>
<g >
<title>do_dentry_open (1 samples, 0.03%)</title><rect x="1166.4" y="213" width="0.3" height="15.0" fill="rgb(232,169,45)" rx="2" ry="2" />
<text  x="1169.41" y="223.5" ></text>
</g>
<g >
<title>__GI___libc_write (2,975 samples, 80.36%)</title><rect x="208.3" y="389" width="948.2" height="15.0" fill="rgb(215,186,41)" rx="2" ry="2" />
<text  x="211.26" y="399.5" >__GI___libc_write</text>
</g>
<g >
<title>ext4_inode_csum_set (1 samples, 0.03%)</title><rect x="855.0" y="85" width="0.3" height="15.0" fill="rgb(233,111,8)" rx="2" ry="2" />
<text  x="858.00" y="95.5" ></text>
</g>
<g >
<title>__cond_resched (2 samples, 0.05%)</title><rect x="278.1" y="277" width="0.6" height="15.0" fill="rgb(233,102,52)" rx="2" ry="2" />
<text  x="281.07" y="287.5" ></text>
</g>
<g >
<title>security_file_permission (41 samples, 1.11%)</title><rect x="1123.4" y="277" width="13.1" height="15.0" fill="rgb(240,72,37)" rx="2" ry="2" />
<text  x="1126.38" y="287.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (1 samples, 0.03%)</title><rect x="855.0" y="165" width="0.3" height="15.0" fill="rgb(229,126,6)" rx="2" ry="2" />
<text  x="858.00" y="175.5" ></text>
</g>
<g >
<title>iov_iter_fault_in_readable (14 samples, 0.38%)</title><rect x="1097.2" y="229" width="4.5" height="15.0" fill="rgb(229,89,36)" rx="2" ry="2" />
<text  x="1100.24" y="239.5" ></text>
</g>
<g >
<title>memset_erms (116 samples, 3.13%)</title><rect x="678.1" y="229" width="37.0" height="15.0" fill="rgb(233,191,12)" rx="2" ry="2" />
<text  x="681.09" y="239.5" >mem..</text>
</g>
<g >
<title>_itoa_word (47 samples, 1.27%)</title><rect x="158.2" y="357" width="15.0" height="15.0" fill="rgb(239,120,12)" rx="2" ry="2" />
<text  x="161.22" y="367.5" ></text>
</g>
<g >
<title>security_file_permission (3 samples, 0.08%)</title><rect x="1136.5" y="293" width="0.9" height="15.0" fill="rgb(215,11,19)" rx="2" ry="2" />
<text  x="1139.45" y="303.5" ></text>
</g>
<g >
<title>release_dentry_name_snapshot (4 samples, 0.11%)</title><rect x="1115.7" y="293" width="1.3" height="15.0" fill="rgb(205,201,12)" rx="2" ry="2" />
<text  x="1118.73" y="303.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (54 samples, 1.46%)</title><rect x="542.6" y="213" width="17.2" height="15.0" fill="rgb(253,195,1)" rx="2" ry="2" />
<text  x="545.63" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="1166.4" y="341" width="0.3" height="15.0" fill="rgb(215,206,40)" rx="2" ry="2" />
<text  x="1169.41" y="351.5" ></text>
</g>
<g >
<title>new_sync_write (1,079 samples, 29.15%)</title><rect x="771.8" y="293" width="343.9" height="15.0" fill="rgb(212,183,15)" rx="2" ry="2" />
<text  x="774.80" y="303.5" >new_sync_write</text>
</g>
<g >
<title>PageHuge (1 samples, 0.03%)</title><rect x="980.3" y="181" width="0.3" height="15.0" fill="rgb(245,53,20)" rx="2" ry="2" />
<text  x="983.26" y="191.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (15 samples, 0.41%)</title><rect x="666.3" y="229" width="4.8" height="15.0" fill="rgb(237,57,4)" rx="2" ry="2" />
<text  x="669.30" y="239.5" ></text>
</g>
<g >
<title>amd_pmu_wait_on_overflow (1 samples, 0.03%)</title><rect x="1137.7" y="117" width="0.3" height="15.0" fill="rgb(244,79,43)" rx="2" ry="2" />
<text  x="1140.73" y="127.5" ></text>
</g>
<g >
<title>common_file_perm (32 samples, 0.86%)</title><rect x="1124.3" y="245" width="10.2" height="15.0" fill="rgb(212,228,31)" rx="2" ry="2" />
<text  x="1127.34" y="255.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (186 samples, 5.02%)</title><rect x="899.6" y="213" width="59.3" height="15.0" fill="rgb(208,93,10)" rx="2" ry="2" />
<text  x="902.62" y="223.5" >__ext4..</text>
</g>
<g >
<title>kfree (1 samples, 0.03%)</title><rect x="664.1" y="197" width="0.3" height="15.0" fill="rgb(208,12,49)" rx="2" ry="2" />
<text  x="667.07" y="207.5" ></text>
</g>
<g >
<title>__mod_memcg_state (2 samples, 0.05%)</title><rect x="655.1" y="149" width="0.7" height="15.0" fill="rgb(219,53,2)" rx="2" ry="2" />
<text  x="658.14" y="159.5" ></text>
</g>
<g >
<title>vfs_open (1 samples, 0.03%)</title><rect x="1166.4" y="229" width="0.3" height="15.0" fill="rgb(219,150,45)" rx="2" ry="2" />
<text  x="1169.41" y="239.5" ></text>
</g>
<g >
<title>iov_iter_init (1 samples, 0.03%)</title><rect x="771.5" y="293" width="0.3" height="15.0" fill="rgb(254,33,51)" rx="2" ry="2" />
<text  x="774.49" y="303.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (9 samples, 0.24%)</title><rect x="652.3" y="117" width="2.8" height="15.0" fill="rgb(254,224,31)" rx="2" ry="2" />
<text  x="655.27" y="127.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (2 samples, 0.05%)</title><rect x="662.5" y="165" width="0.6" height="15.0" fill="rgb(249,115,36)" rx="2" ry="2" />
<text  x="665.47" y="175.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.03%)</title><rect x="515.9" y="133" width="0.3" height="15.0" fill="rgb(221,176,24)" rx="2" ry="2" />
<text  x="518.85" y="143.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (1 samples, 0.03%)</title><rect x="855.0" y="149" width="0.3" height="15.0" fill="rgb(235,27,40)" rx="2" ry="2" />
<text  x="858.00" y="159.5" ></text>
</g>
<g >
<title>__mod_memcg_state (11 samples, 0.30%)</title><rect x="651.6" y="133" width="3.5" height="15.0" fill="rgb(223,0,18)" rx="2" ry="2" />
<text  x="654.64" y="143.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1072.4" y="213" width="0.3" height="15.0" fill="rgb(230,225,53)" rx="2" ry="2" />
<text  x="1075.38" y="223.5" ></text>
</g>
<g >
<title>refill_obj_stock (21 samples, 0.57%)</title><rect x="655.8" y="133" width="6.7" height="15.0" fill="rgb(210,55,0)" rx="2" ry="2" />
<text  x="658.78" y="143.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.03%)</title><rect x="663.1" y="165" width="0.3" height="15.0" fill="rgb(248,76,31)" rx="2" ry="2" />
<text  x="666.11" y="175.5" ></text>
</g>
<g >
<title>__fsnotify_parent (1,557 samples, 42.06%)</title><rect x="269.5" y="293" width="496.2" height="15.0" fill="rgb(226,139,44)" rx="2" ry="2" />
<text  x="272.46" y="303.5" >__fsnotify_parent</text>
</g>
<g >
<title>__x64_sys_write (5 samples, 0.14%)</title><rect x="240.5" y="357" width="1.5" height="15.0" fill="rgb(226,23,18)" rx="2" ry="2" />
<text  x="243.45" y="367.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_r10 (17 samples, 0.46%)</title><rect x="385.5" y="261" width="5.4" height="15.0" fill="rgb(246,162,30)" rx="2" ry="2" />
<text  x="388.48" y="271.5" ></text>
</g>
<g >
<title>ksys_write (2,792 samples, 75.42%)</title><rect x="247.5" y="325" width="889.9" height="15.0" fill="rgb(240,145,2)" rx="2" ry="2" />
<text  x="250.47" y="335.5" >ksys_write</text>
</g>
<g >
<title>_itoa_word (33 samples, 0.89%)</title><rect x="98.3" y="357" width="10.5" height="15.0" fill="rgb(247,219,11)" rx="2" ry="2" />
<text  x="101.29" y="367.5" ></text>
</g>
<g >
<title>lockref_get_not_zero (1 samples, 0.03%)</title><rect x="724.9" y="277" width="0.4" height="15.0" fill="rgb(207,154,44)" rx="2" ry="2" />
<text  x="727.95" y="287.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.03%)</title><rect x="1175.0" y="325" width="0.3" height="15.0" fill="rgb(206,72,26)" rx="2" ry="2" />
<text  x="1178.02" y="335.5" ></text>
</g>
<g >
<title>rcu_all_qs (2 samples, 0.05%)</title><rect x="559.8" y="213" width="0.7" height="15.0" fill="rgb(251,23,7)" rx="2" ry="2" />
<text  x="562.84" y="223.5" ></text>
</g>
<g >
<title>__srcu_read_lock (2 samples, 0.05%)</title><rect x="278.7" y="277" width="0.6" height="15.0" fill="rgb(223,16,43)" rx="2" ry="2" />
<text  x="281.70" y="287.5" ></text>
</g>
<g >
<title>delay_halt (1 samples, 0.03%)</title><rect x="1137.7" y="85" width="0.3" height="15.0" fill="rgb(208,35,10)" rx="2" ry="2" />
<text  x="1140.73" y="95.5" ></text>
</g>
<g >
<title>unlock_page (6 samples, 0.16%)</title><rect x="1102.7" y="229" width="1.9" height="15.0" fill="rgb(250,109,44)" rx="2" ry="2" />
<text  x="1105.66" y="239.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (41 samples, 1.11%)</title><rect x="43.5" y="357" width="13.0" height="15.0" fill="rgb(224,69,32)" rx="2" ry="2" />
<text  x="46.47" y="367.5" ></text>
</g>
<g >
<title>delay_halt_mwaitx (1 samples, 0.03%)</title><rect x="1137.7" y="69" width="0.3" height="15.0" fill="rgb(214,18,52)" rx="2" ry="2" />
<text  x="1140.73" y="79.5" ></text>
</g>
<g >
<title>generic_update_time (1 samples, 0.03%)</title><rect x="855.0" y="181" width="0.3" height="15.0" fill="rgb(205,5,1)" rx="2" ry="2" />
<text  x="858.00" y="191.5" ></text>
</g>
<g >
<title>copyin (3 samples, 0.08%)</title><rect x="888.5" y="229" width="0.9" height="15.0" fill="rgb(247,111,40)" rx="2" ry="2" />
<text  x="891.47" y="239.5" ></text>
</g>
<g >
<title>_int_free (4 samples, 0.11%)</title><rect x="1167.1" y="389" width="1.2" height="15.0" fill="rgb(209,34,29)" rx="2" ry="2" />
<text  x="1170.05" y="399.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1137.7" y="325" width="0.3" height="15.0" fill="rgb(248,143,46)" rx="2" ry="2" />
<text  x="1140.73" y="335.5" ></text>
</g>
<g >
<title>apparmor_file_permission (6 samples, 0.16%)</title><rect x="1121.5" y="277" width="1.9" height="15.0" fill="rgb(232,173,5)" rx="2" ry="2" />
<text  x="1124.47" y="287.5" ></text>
</g>
<g >
<title>ext4_do_update_inode (1 samples, 0.03%)</title><rect x="855.0" y="101" width="0.3" height="15.0" fill="rgb(221,223,49)" rx="2" ry="2" />
<text  x="858.00" y="111.5" ></text>
</g>
<g >
<title>generic_perform_write (1 samples, 0.03%)</title><rect x="1108.7" y="261" width="0.3" height="15.0" fill="rgb(244,146,44)" rx="2" ry="2" />
<text  x="1111.72" y="271.5" ></text>
</g>
<g >
<title>current_time (12 samples, 0.32%)</title><rect x="850.5" y="197" width="3.9" height="15.0" fill="rgb(252,207,30)" rx="2" ry="2" />
<text  x="853.53" y="207.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.03%)</title><rect x="515.9" y="165" width="0.3" height="15.0" fill="rgb(222,40,3)" rx="2" ry="2" />
<text  x="518.85" y="175.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (21 samples, 0.57%)</title><rect x="1168.3" y="389" width="6.7" height="15.0" fill="rgb(247,150,6)" rx="2" ry="2" />
<text  x="1171.33" y="399.5" ></text>
</g>
<g >
<title>__srcu_read_unlock (12 samples, 0.32%)</title><rect x="381.7" y="261" width="3.8" height="15.0" fill="rgb(249,113,44)" rx="2" ry="2" />
<text  x="384.66" y="271.5" ></text>
</g>
<g >
<title>_IO_setb (28 samples, 0.76%)</title><rect x="199.3" y="389" width="9.0" height="15.0" fill="rgb(243,219,35)" rx="2" ry="2" />
<text  x="202.34" y="399.5" ></text>
</g>
<g >
<title>__vfprintf_internal (80 samples, 2.16%)</title><rect x="132.7" y="357" width="25.5" height="15.0" fill="rgb(222,203,34)" rx="2" ry="2" />
<text  x="135.72" y="367.5" >_..</text>
</g>
<g >
<title>ext4_da_write_end (13 samples, 0.35%)</title><rect x="834.3" y="245" width="4.1" height="15.0" fill="rgb(253,148,2)" rx="2" ry="2" />
<text  x="837.28" y="255.5" ></text>
</g>
<g >
<title>ext4_inode_csum.isra.0 (1 samples, 0.03%)</title><rect x="855.0" y="69" width="0.3" height="15.0" fill="rgb(233,20,34)" rx="2" ry="2" />
<text  x="858.00" y="79.5" ></text>
</g>
<g >
<title>kmem_cache_free (63 samples, 1.70%)</title><rect x="1007.7" y="181" width="20.1" height="15.0" fill="rgb(242,61,47)" rx="2" ry="2" />
<text  x="1010.68" y="191.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (11 samples, 0.30%)</title><rect x="830.8" y="245" width="3.5" height="15.0" fill="rgb(229,63,28)" rx="2" ry="2" />
<text  x="833.77" y="255.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (6 samples, 0.16%)</title><rect x="761.9" y="277" width="1.9" height="15.0" fill="rgb(245,166,18)" rx="2" ry="2" />
<text  x="764.92" y="287.5" ></text>
</g>
<g >
<title>kmalloc_slab (10 samples, 0.27%)</title><rect x="539.4" y="213" width="3.2" height="15.0" fill="rgb(218,209,48)" rx="2" ry="2" />
<text  x="542.44" y="223.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (2 samples, 0.05%)</title><rect x="1060.3" y="213" width="0.6" height="15.0" fill="rgb(238,0,54)" rx="2" ry="2" />
<text  x="1063.27" y="223.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.03%)</title><rect x="1137.7" y="277" width="0.3" height="15.0" fill="rgb(217,10,24)" rx="2" ry="2" />
<text  x="1140.73" y="287.5" ></text>
</g>
<g >
<title>dput (15 samples, 0.41%)</title><rect x="320.5" y="277" width="4.7" height="15.0" fill="rgb(218,65,53)" rx="2" ry="2" />
<text  x="323.46" y="287.5" ></text>
</g>
<g >
<title>__vfprintf_internal (3 samples, 0.08%)</title><rect x="27.5" y="373" width="1.0" height="15.0" fill="rgb(224,167,31)" rx="2" ry="2" />
<text  x="30.53" y="383.5" ></text>
</g>
<g >
<title>ktime_get_coarse_real_ts64 (1 samples, 0.03%)</title><rect x="854.4" y="197" width="0.3" height="15.0" fill="rgb(217,47,44)" rx="2" ry="2" />
<text  x="857.36" y="207.5" ></text>
</g>
<g >
<title>__GI___open64_nocancel (1 samples, 0.03%)</title><rect x="1166.4" y="373" width="0.3" height="15.0" fill="rgb(252,86,3)" rx="2" ry="2" />
<text  x="1169.41" y="383.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (4 samples, 0.11%)</title><rect x="593.6" y="117" width="1.3" height="15.0" fill="rgb(214,111,8)" rx="2" ry="2" />
<text  x="596.63" y="127.5" ></text>
</g>
<g >
<title>__lock_text_start (3 samples, 0.08%)</title><rect x="585.7" y="181" width="0.9" height="15.0" fill="rgb(225,14,0)" rx="2" ry="2" />
<text  x="588.66" y="191.5" ></text>
</g>
<g >
<title>inotify_free_event (6 samples, 0.16%)</title><rect x="664.4" y="213" width="1.9" height="15.0" fill="rgb(211,83,53)" rx="2" ry="2" />
<text  x="667.39" y="223.5" ></text>
</g>
<g >
<title>default_wake_function (17 samples, 0.46%)</title><rect x="589.5" y="149" width="5.4" height="15.0" fill="rgb(207,119,19)" rx="2" ry="2" />
<text  x="592.48" y="159.5" ></text>
</g>
<g >
<title>memcg_slab_free_hook (2 samples, 0.05%)</title><rect x="1027.8" y="181" width="0.6" height="15.0" fill="rgb(246,93,39)" rx="2" ry="2" />
<text  x="1030.76" y="191.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (1 samples, 0.03%)</title><rect x="173.2" y="373" width="0.3" height="15.0" fill="rgb(216,46,44)" rx="2" ry="2" />
<text  x="176.20" y="383.5" ></text>
</g>
<g >
<title>aa_file_perm (1 samples, 0.03%)</title><rect x="1124.0" y="245" width="0.3" height="15.0" fill="rgb(220,23,34)" rx="2" ry="2" />
<text  x="1127.02" y="255.5" ></text>
</g>
<g >
<title>_IO_str_init_static_internal (10 samples, 0.27%)</title><rect x="24.3" y="373" width="3.2" height="15.0" fill="rgb(217,110,49)" rx="2" ry="2" />
<text  x="27.34" y="383.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (66 samples, 1.78%)</title><rect x="178.3" y="389" width="21.0" height="15.0" fill="rgb(232,85,27)" rx="2" ry="2" />
<text  x="181.30" y="399.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (26 samples, 0.70%)</title><rect x="1033.2" y="149" width="8.3" height="15.0" fill="rgb(209,141,11)" rx="2" ry="2" />
<text  x="1036.18" y="159.5" ></text>
</g>
<g >
<title>ext4_write_checks (47 samples, 1.27%)</title><rect x="841.6" y="245" width="15.0" height="15.0" fill="rgb(250,187,51)" rx="2" ry="2" />
<text  x="844.61" y="255.5" ></text>
</g>
<g >
<title>inotify_free_event (160 samples, 4.32%)</title><rect x="613.1" y="197" width="51.0" height="15.0" fill="rgb(232,96,37)" rx="2" ry="2" />
<text  x="616.07" y="207.5" >inoti..</text>
</g>
<g >
<title>syscall_enter_from_user_mode (2 samples, 0.05%)</title><rect x="1137.4" y="341" width="0.6" height="15.0" fill="rgb(211,82,35)" rx="2" ry="2" />
<text  x="1140.41" y="351.5" ></text>
</g>
<g >
<title>timestamp_truncate (1 samples, 0.03%)</title><rect x="854.7" y="197" width="0.3" height="15.0" fill="rgb(236,188,29)" rx="2" ry="2" />
<text  x="857.68" y="207.5" ></text>
</g>
<g >
<title>take_dentry_name_snapshot (6 samples, 0.16%)</title><rect x="763.8" y="277" width="1.9" height="15.0" fill="rgb(218,91,16)" rx="2" ry="2" />
<text  x="766.84" y="287.5" ></text>
</g>
<g >
<title>do_sys_openat2 (1 samples, 0.03%)</title><rect x="1166.4" y="293" width="0.3" height="15.0" fill="rgb(207,153,31)" rx="2" ry="2" />
<text  x="1169.41" y="303.5" ></text>
</g>
<g >
<title>__slab_alloc (7 samples, 0.19%)</title><rect x="513.6" y="213" width="2.3" height="15.0" fill="rgb(222,215,14)" rx="2" ry="2" />
<text  x="516.62" y="223.5" ></text>
</g>
<g >
<title>pagecache_get_page (3 samples, 0.08%)</title><rect x="998.4" y="213" width="1.0" height="15.0" fill="rgb(211,94,31)" rx="2" ry="2" />
<text  x="1001.43" y="223.5" ></text>
</g>
<g >
<title>__wake_up (1 samples, 0.03%)</title><rect x="1007.4" y="181" width="0.3" height="15.0" fill="rgb(225,189,34)" rx="2" ry="2" />
<text  x="1010.36" y="191.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (73 samples, 1.97%)</title><rect x="516.2" y="213" width="23.2" height="15.0" fill="rgb(234,207,40)" rx="2" ry="2" />
<text  x="519.17" y="223.5" >g..</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="515.9" y="181" width="0.3" height="15.0" fill="rgb(209,183,12)" rx="2" ry="2" />
<text  x="518.85" y="191.5" ></text>
</g>
<g >
<title>inotify_handle_inode_event (12 samples, 0.32%)</title><rect x="720.5" y="261" width="3.8" height="15.0" fill="rgb(244,206,49)" rx="2" ry="2" />
<text  x="723.49" y="271.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.03%)</title><rect x="515.9" y="101" width="0.3" height="15.0" fill="rgb(242,161,15)" rx="2" ry="2" />
<text  x="518.85" y="111.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="1175.0" y="389" width="0.3" height="15.0" fill="rgb(224,202,19)" rx="2" ry="2" />
<text  x="1178.02" y="399.5" ></text>
</g>
<g >
<title>generic_write_end (2 samples, 0.05%)</title><rect x="1062.2" y="229" width="0.6" height="15.0" fill="rgb(225,54,12)" rx="2" ry="2" />
<text  x="1065.18" y="239.5" ></text>
</g>
<g >
<title>memcg_slab_free_hook (2 samples, 0.05%)</title><rect x="663.4" y="181" width="0.7" height="15.0" fill="rgb(234,215,17)" rx="2" ry="2" />
<text  x="666.43" y="191.5" ></text>
</g>
<g >
<title>__srcu_read_lock (4 samples, 0.11%)</title><rect x="380.4" y="261" width="1.3" height="15.0" fill="rgb(244,97,30)" rx="2" ry="2" />
<text  x="383.38" y="271.5" ></text>
</g>
<g >
<title>__slab_alloc (1 samples, 0.03%)</title><rect x="560.5" y="229" width="0.3" height="15.0" fill="rgb(213,16,26)" rx="2" ry="2" />
<text  x="563.48" y="239.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (10 samples, 0.27%)</title><rect x="765.7" y="293" width="3.2" height="15.0" fill="rgb(224,120,3)" rx="2" ry="2" />
<text  x="768.75" y="303.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (26 samples, 0.70%)</title><rect x="958.9" y="213" width="8.3" height="15.0" fill="rgb(250,202,6)" rx="2" ry="2" />
<text  x="961.91" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_openat (1 samples, 0.03%)</title><rect x="1166.4" y="325" width="0.3" height="15.0" fill="rgb(241,57,43)" rx="2" ry="2" />
<text  x="1169.41" y="335.5" ></text>
</g>
<g >
<title>stop_this_handle (45 samples, 1.22%)</title><rect x="1028.4" y="181" width="14.3" height="15.0" fill="rgb(241,164,48)" rx="2" ry="2" />
<text  x="1031.40" y="191.5" ></text>
</g>
<g >
<title>ext4_generic_write_checks (8 samples, 0.22%)</title><rect x="842.6" y="229" width="2.5" height="15.0" fill="rgb(249,190,2)" rx="2" ry="2" />
<text  x="845.57" y="239.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge_pages (1 samples, 0.03%)</title><rect x="661.8" y="101" width="0.4" height="15.0" fill="rgb(246,55,28)" rx="2" ry="2" />
<text  x="664.84" y="111.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (3 samples, 0.08%)</title><rect x="716.3" y="229" width="1.0" height="15.0" fill="rgb(209,28,40)" rx="2" ry="2" />
<text  x="719.34" y="239.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (1 samples, 0.03%)</title><rect x="1137.7" y="229" width="0.3" height="15.0" fill="rgb(207,210,22)" rx="2" ry="2" />
<text  x="1140.73" y="239.5" ></text>
</g>
<g >
<title>perf_pmu_disable.part.0 (1 samples, 0.03%)</title><rect x="1137.7" y="165" width="0.3" height="15.0" fill="rgb(231,161,8)" rx="2" ry="2" />
<text  x="1140.73" y="175.5" ></text>
</g>
<g >
<title>do_filp_open (1 samples, 0.03%)</title><rect x="1166.4" y="277" width="0.3" height="15.0" fill="rgb(243,104,1)" rx="2" ry="2" />
<text  x="1169.41" y="287.5" ></text>
</g>
<g >
<title>file_remove_privs (3 samples, 0.08%)</title><rect x="855.3" y="229" width="1.0" height="15.0" fill="rgb(236,28,3)" rx="2" ry="2" />
<text  x="858.32" y="239.5" ></text>
</g>
<g >
<title>__mod_memcg_state (1 samples, 0.03%)</title><rect x="513.3" y="213" width="0.3" height="15.0" fill="rgb(206,208,17)" rx="2" ry="2" />
<text  x="516.30" y="223.5" ></text>
</g>
<g >
<title>ext4_file_open (1 samples, 0.03%)</title><rect x="1166.4" y="197" width="0.3" height="15.0" fill="rgb(246,208,46)" rx="2" ry="2" />
<text  x="1169.41" y="207.5" ></text>
</g>
<g >
<title>lockref_get_not_zero (77 samples, 2.08%)</title><rect x="295.9" y="261" width="24.6" height="15.0" fill="rgb(223,204,14)" rx="2" ry="2" />
<text  x="298.92" y="271.5" >l..</text>
</g>
<g >
<title>__get_user_nocheck_1 (48 samples, 1.30%)</title><rect x="865.8" y="229" width="15.3" height="15.0" fill="rgb(230,225,14)" rx="2" ry="2" />
<text  x="868.83" y="239.5" ></text>
</g>
<g >
<title>rcu_all_qs (5 samples, 0.14%)</title><rect x="323.3" y="261" width="1.6" height="15.0" fill="rgb(245,116,35)" rx="2" ry="2" />
<text  x="326.33" y="271.5" ></text>
</g>
<g >
<title>unlock_page (4 samples, 0.11%)</title><rect x="1060.9" y="213" width="1.3" height="15.0" fill="rgb(236,52,2)" rx="2" ry="2" />
<text  x="1063.91" y="223.5" ></text>
</g>
<g >
<title>should_failslab (4 samples, 0.11%)</title><rect x="944.2" y="181" width="1.3" height="15.0" fill="rgb(228,62,14)" rx="2" ry="2" />
<text  x="947.25" y="191.5" ></text>
</g>
<g >
<title>__fsnotify_parent (1 samples, 0.03%)</title><rect x="259.6" y="309" width="0.3" height="15.0" fill="rgb(222,115,19)" rx="2" ry="2" />
<text  x="262.58" y="319.5" ></text>
</g>
<g >
<title>xas_load (37 samples, 1.00%)</title><rect x="980.9" y="181" width="11.8" height="15.0" fill="rgb(222,136,15)" rx="2" ry="2" />
<text  x="983.90" y="191.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1137.7" y="309" width="0.3" height="15.0" fill="rgb(217,7,17)" rx="2" ry="2" />
<text  x="1140.73" y="319.5" ></text>
</g>
<g >
<title>__vsprintf_internal (4 samples, 0.11%)</title><rect x="1165.1" y="389" width="1.3" height="15.0" fill="rgb(233,162,15)" rx="2" ry="2" />
<text  x="1168.14" y="399.5" ></text>
</g>
<g >
<title>lockref_put_return (108 samples, 2.92%)</title><rect x="725.3" y="277" width="34.4" height="15.0" fill="rgb(219,40,50)" rx="2" ry="2" />
<text  x="728.27" y="287.5" >lo..</text>
</g>
<g >
<title>__x86_indirect_thunk_rax (9 samples, 0.24%)</title><rect x="806.5" y="245" width="2.9" height="15.0" fill="rgb(236,48,34)" rx="2" ry="2" />
<text  x="809.55" y="255.5" ></text>
</g>
<g >
<title>sprintf (12 samples, 0.32%)</title><rect x="1186.2" y="389" width="3.8" height="15.0" fill="rgb(240,120,44)" rx="2" ry="2" />
<text  x="1189.18" y="399.5" ></text>
</g>
<g >
<title>woken_wake_function (1 samples, 0.03%)</title><rect x="602.2" y="181" width="0.3" height="15.0" fill="rgb(209,213,6)" rx="2" ry="2" />
<text  x="605.23" y="191.5" ></text>
</g>
<g >
<title>timestamp_truncate (3 samples, 0.08%)</title><rect x="853.4" y="181" width="1.0" height="15.0" fill="rgb(229,208,17)" rx="2" ry="2" />
<text  x="856.40" y="191.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.03%)</title><rect x="324.9" y="261" width="0.3" height="15.0" fill="rgb(209,127,6)" rx="2" ry="2" />
<text  x="327.92" y="271.5" ></text>
</g>
<g >
<title>__cond_resched (4 samples, 0.11%)</title><rect x="402.7" y="229" width="1.3" height="15.0" fill="rgb(212,44,7)" rx="2" ry="2" />
<text  x="405.70" y="239.5" ></text>
</g>
<g >
<title>fsnotify_compare_groups (1 samples, 0.03%)</title><rect x="724.3" y="277" width="0.3" height="15.0" fill="rgb(218,113,1)" rx="2" ry="2" />
<text  x="727.31" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="1175.0" y="373" width="0.3" height="15.0" fill="rgb(226,198,52)" rx="2" ry="2" />
<text  x="1178.02" y="383.5" ></text>
</g>
<g >
<title>exit_mmap (1 samples, 0.03%)</title><rect x="1175.0" y="293" width="0.3" height="15.0" fill="rgb(233,30,17)" rx="2" ry="2" />
<text  x="1178.02" y="303.5" ></text>
</g>
<g >
<title>__lock_text_start (4 samples, 0.11%)</title><rect x="1034.8" y="133" width="1.2" height="15.0" fill="rgb(239,40,7)" rx="2" ry="2" />
<text  x="1037.77" y="143.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (961 samples, 25.96%)</title><rect x="800.5" y="261" width="306.3" height="15.0" fill="rgb(210,73,30)" rx="2" ry="2" />
<text  x="803.49" y="271.5" >ext4_buffered_write_iter</text>
</g>
<g >
<title>do_group_exit (1 samples, 0.03%)</title><rect x="1175.0" y="341" width="0.3" height="15.0" fill="rgb(208,226,51)" rx="2" ry="2" />
<text  x="1178.02" y="351.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (12 samples, 0.32%)</title><rect x="608.0" y="213" width="3.8" height="15.0" fill="rgb(236,152,54)" rx="2" ry="2" />
<text  x="610.97" y="223.5" ></text>
</g>
<g >
<title>vfs_write (2,752 samples, 74.34%)</title><rect x="260.2" y="309" width="877.2" height="15.0" fill="rgb(215,56,39)" rx="2" ry="2" />
<text  x="263.22" y="319.5" >vfs_write</text>
</g>
<g >
<title>pagecache_get_page (93 samples, 2.51%)</title><rect x="968.2" y="197" width="29.6" height="15.0" fill="rgb(216,89,21)" rx="2" ry="2" />
<text  x="971.15" y="207.5" >pa..</text>
</g>
<g >
<title>refill_stock (1 samples, 0.03%)</title><rect x="662.2" y="101" width="0.3" height="15.0" fill="rgb(236,36,40)" rx="2" ry="2" />
<text  x="665.16" y="111.5" ></text>
</g>
<g >
<title>path_openat (1 samples, 0.03%)</title><rect x="1166.4" y="261" width="0.3" height="15.0" fill="rgb(211,84,6)" rx="2" ry="2" />
<text  x="1169.41" y="271.5" ></text>
</g>
<g >
<title>file_update_time (1 samples, 0.03%)</title><rect x="856.3" y="229" width="0.3" height="15.0" fill="rgb(240,181,35)" rx="2" ry="2" />
<text  x="859.27" y="239.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.03%)</title><rect x="1137.7" y="197" width="0.3" height="15.0" fill="rgb(225,171,21)" rx="2" ry="2" />
<text  x="1140.73" y="207.5" ></text>
</g>
<g >
<title>block_write_end (30 samples, 0.81%)</title><rect x="1050.7" y="197" width="9.6" height="15.0" fill="rgb(228,4,27)" rx="2" ry="2" />
<text  x="1053.71" y="207.5" ></text>
</g>
<g >
<title>fsnotify_add_event (95 samples, 2.57%)</title><rect x="577.1" y="229" width="30.2" height="15.0" fill="rgb(230,132,22)" rx="2" ry="2" />
<text  x="580.05" y="239.5" >fs..</text>
</g>
<g >
<title>fsnotify (1,252 samples, 33.82%)</title><rect x="325.2" y="277" width="399.1" height="15.0" fill="rgb(221,144,25)" rx="2" ry="2" />
<text  x="328.24" y="287.5" >fsnotify</text>
</g>
<g >
<title>fsnotify (1 samples, 0.03%)</title><rect x="771.2" y="293" width="0.3" height="15.0" fill="rgb(234,47,36)" rx="2" ry="2" />
<text  x="774.17" y="303.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.03%)</title><rect x="259.9" y="309" width="0.3" height="15.0" fill="rgb(246,135,19)" rx="2" ry="2" />
<text  x="262.90" y="319.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (1 samples, 0.03%)</title><rect x="792.5" y="277" width="0.3" height="15.0" fill="rgb(237,157,32)" rx="2" ry="2" />
<text  x="795.52" y="287.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (7 samples, 0.19%)</title><rect x="602.5" y="197" width="2.3" height="15.0" fill="rgb(222,6,49)" rx="2" ry="2" />
<text  x="605.55" y="207.5" ></text>
</g>
<g >
<title>kill_fasync (1 samples, 0.03%)</title><rect x="677.8" y="229" width="0.3" height="15.0" fill="rgb(232,197,51)" rx="2" ry="2" />
<text  x="680.77" y="239.5" ></text>
</g>
<g >
<title>__cond_resched (3 samples, 0.08%)</title><rect x="803.0" y="245" width="1.0" height="15.0" fill="rgb(249,8,26)" rx="2" ry="2" />
<text  x="806.04" y="255.5" ></text>
</g>
<g >
<title>rw_verify_area (61 samples, 1.65%)</title><rect x="1117.0" y="293" width="19.5" height="15.0" fill="rgb(236,107,1)" rx="2" ry="2" />
<text  x="1120.01" y="303.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (94 samples, 2.54%)</title><rect x="1067.3" y="229" width="29.9" height="15.0" fill="rgb(248,187,33)" rx="2" ry="2" />
<text  x="1070.28" y="239.5" >io..</text>
</g>
<g >
<title>ext4_fc_start_update (10 samples, 0.27%)</title><rect x="838.4" y="245" width="3.2" height="15.0" fill="rgb(232,135,11)" rx="2" ry="2" />
<text  x="841.42" y="255.5" ></text>
</g>
<g >
<title>drain_obj_stock.isra.0 (3 samples, 0.08%)</title><rect x="661.5" y="117" width="1.0" height="15.0" fill="rgb(232,45,51)" rx="2" ry="2" />
<text  x="664.52" y="127.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (1 samples, 0.03%)</title><rect x="855.0" y="133" width="0.3" height="15.0" fill="rgb(216,79,48)" rx="2" ry="2" />
<text  x="858.00" y="143.5" ></text>
</g>
<g >
<title>ext4_write_checks (2 samples, 0.05%)</title><rect x="1108.1" y="261" width="0.6" height="15.0" fill="rgb(239,46,33)" rx="2" ry="2" />
<text  x="1111.08" y="271.5" ></text>
</g>
<g >
<title>__vfprintf_internal (112 samples, 3.03%)</title><rect x="62.6" y="357" width="35.7" height="15.0" fill="rgb(219,207,17)" rx="2" ry="2" />
<text  x="65.59" y="367.5" >__v..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (7 samples, 0.19%)</title><rect x="1156.5" y="389" width="2.3" height="15.0" fill="rgb(233,175,6)" rx="2" ry="2" />
<text  x="1159.53" y="399.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.03%)</title><rect x="515.9" y="149" width="0.3" height="15.0" fill="rgb(210,228,15)" rx="2" ry="2" />
<text  x="518.85" y="159.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (57 samples, 1.54%)</title><rect x="584.4" y="197" width="18.1" height="15.0" fill="rgb(241,89,11)" rx="2" ry="2" />
<text  x="587.38" y="207.5" ></text>
</g>
<g >
<title>__kmalloc (491 samples, 13.26%)</title><rect x="404.0" y="229" width="156.5" height="15.0" fill="rgb(224,195,9)" rx="2" ry="2" />
<text  x="406.97" y="239.5" >__kmalloc</text>
</g>
<g >
<title>__fget_light (30 samples, 0.81%)</title><rect x="250.0" y="309" width="9.6" height="15.0" fill="rgb(209,26,54)" rx="2" ry="2" />
<text  x="253.02" y="319.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_objcg (2 samples, 0.05%)</title><rect x="556.7" y="181" width="0.6" height="15.0" fill="rgb(221,112,33)" rx="2" ry="2" />
<text  x="559.65" y="191.5" ></text>
</g>
<g >
<title>all (3,702 samples, 100%)</title><rect x="10.0" y="421" width="1180.0" height="15.0" fill="rgb(214,177,51)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (52 samples, 1.40%)</title><rect x="496.7" y="213" width="16.6" height="15.0" fill="rgb(217,143,6)" rx="2" ry="2" />
<text  x="499.73" y="223.5" ></text>
</g>
<g >
<title>__wake_up_common (5 samples, 0.14%)</title><rect x="1036.0" y="133" width="1.6" height="15.0" fill="rgb(252,88,19)" rx="2" ry="2" />
<text  x="1039.05" y="143.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.03%)</title><rect x="515.9" y="69" width="0.3" height="15.0" fill="rgb(231,61,29)" rx="2" ry="2" />
<text  x="518.85" y="79.5" ></text>
</g>
<g >
<title>_raw_spin_lock (7 samples, 0.19%)</title><rect x="602.5" y="213" width="2.3" height="15.0" fill="rgb(210,142,27)" rx="2" ry="2" />
<text  x="605.55" y="223.5" ></text>
</g>
<g >
<title>ext4_journal_check_start (1 samples, 0.03%)</title><rect x="967.2" y="213" width="0.3" height="15.0" fill="rgb(209,215,24)" rx="2" ry="2" />
<text  x="970.20" y="223.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (3 samples, 0.08%)</title><rect x="1041.5" y="149" width="0.9" height="15.0" fill="rgb(243,6,49)" rx="2" ry="2" />
<text  x="1044.46" y="159.5" ></text>
</g>
<g >
<title>strcpy (7 samples, 0.19%)</title><rect x="718.3" y="245" width="2.2" height="15.0" fill="rgb(225,77,4)" rx="2" ry="2" />
<text  x="721.25" y="255.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (20 samples, 0.54%)</title><rect x="1150.2" y="373" width="6.3" height="15.0" fill="rgb(250,216,42)" rx="2" ry="2" />
<text  x="1153.16" y="383.5" ></text>
</g>
<g >
<title>should_failslab (3 samples, 0.08%)</title><rect x="717.3" y="229" width="1.0" height="15.0" fill="rgb(221,192,45)" rx="2" ry="2" />
<text  x="720.30" y="239.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (1 samples, 0.03%)</title><rect x="855.0" y="37" width="0.3" height="15.0" fill="rgb(224,104,2)" rx="2" ry="2" />
<text  x="858.00" y="47.5" ></text>
</g>
<g >
<title>jbd2__journal_start (164 samples, 4.43%)</title><rect x="906.3" y="197" width="52.3" height="15.0" fill="rgb(229,133,26)" rx="2" ry="2" />
<text  x="909.32" y="207.5" >jbd2_..</text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (2 samples, 0.05%)</title><rect x="601.6" y="165" width="0.6" height="15.0" fill="rgb(237,37,28)" rx="2" ry="2" />
<text  x="604.59" y="175.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.03%)</title><rect x="1137.7" y="245" width="0.3" height="15.0" fill="rgb(211,48,45)" rx="2" ry="2" />
<text  x="1140.73" y="255.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="595.2" y="181" width="0.3" height="15.0" fill="rgb(218,130,34)" rx="2" ry="2" />
<text  x="598.22" y="191.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.19%)</title><rect x="10.0" y="373" width="2.2" height="15.0" fill="rgb(250,177,0)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>ext4_nonda_switch (2 samples, 0.05%)</title><rect x="967.5" y="213" width="0.7" height="15.0" fill="rgb(242,30,49)" rx="2" ry="2" />
<text  x="970.51" y="223.5" ></text>
</g>
<g >
<title>fsnotify_destroy_event (3 samples, 0.08%)</title><rect x="392.2" y="245" width="0.9" height="15.0" fill="rgb(208,150,52)" rx="2" ry="2" />
<text  x="395.18" y="255.5" ></text>
</g>
<g >
<title>start_this_handle (41 samples, 1.11%)</title><rect x="945.5" y="181" width="13.1" height="15.0" fill="rgb(212,189,4)" rx="2" ry="2" />
<text  x="948.52" y="191.5" ></text>
</g>
<g >
<title>___slab_alloc (4 samples, 0.11%)</title><rect x="514.6" y="197" width="1.3" height="15.0" fill="rgb(221,224,17)" rx="2" ry="2" />
<text  x="517.58" y="207.5" ></text>
</g>
<g >
<title>__entry_text_start (66 samples, 1.78%)</title><rect x="216.5" y="373" width="21.1" height="15.0" fill="rgb(254,29,39)" rx="2" ry="2" />
<text  x="219.55" y="383.5" ></text>
</g>
<g >
<title>aa_file_perm (3 samples, 0.08%)</title><rect x="1133.6" y="229" width="0.9" height="15.0" fill="rgb(237,126,39)" rx="2" ry="2" />
<text  x="1136.58" y="239.5" ></text>
</g>
<g >
<title>generic_perform_write (784 samples, 21.18%)</title><rect x="856.6" y="245" width="249.9" height="15.0" fill="rgb(251,82,20)" rx="2" ry="2" />
<text  x="859.59" y="255.5" >generic_perform_write</text>
</g>
<g >
<title>__mempcpy_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="1158.8" y="389" width="0.3" height="15.0" fill="rgb(235,104,9)" rx="2" ry="2" />
<text  x="1161.76" y="399.5" ></text>
</g>
<g >
<title>generic_write_check_limits (4 samples, 0.11%)</title><rect x="842.9" y="213" width="1.3" height="15.0" fill="rgb(230,20,0)" rx="2" ry="2" />
<text  x="845.88" y="223.5" ></text>
</g>
<g >
<title>down_write (67 samples, 1.81%)</title><rect x="809.4" y="245" width="21.4" height="15.0" fill="rgb(206,55,22)" rx="2" ry="2" />
<text  x="812.42" y="255.5" >d..</text>
</g>
<g >
<title>kfree (158 samples, 4.27%)</title><rect x="613.1" y="181" width="50.3" height="15.0" fill="rgb(252,189,13)" rx="2" ry="2" />
<text  x="616.07" y="191.5" >kfree</text>
</g>
<g >
<title>__cond_resched (2 samples, 0.05%)</title><rect x="905.4" y="181" width="0.6" height="15.0" fill="rgb(239,72,53)" rx="2" ry="2" />
<text  x="908.36" y="191.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.03%)</title><rect x="1137.7" y="213" width="0.3" height="15.0" fill="rgb(235,175,26)" rx="2" ry="2" />
<text  x="1140.73" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (1 samples, 0.03%)</title><rect x="1175.0" y="357" width="0.3" height="15.0" fill="rgb(243,142,16)" rx="2" ry="2" />
<text  x="1178.02" y="367.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.03%)</title><rect x="1175.0" y="277" width="0.3" height="15.0" fill="rgb(251,167,18)" rx="2" ry="2" />
<text  x="1178.02" y="287.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (1 samples, 0.03%)</title><rect x="173.2" y="341" width="0.3" height="15.0" fill="rgb(217,138,5)" rx="2" ry="2" />
<text  x="176.20" y="351.5" ></text>
</g>
<g >
<title>rcu_all_qs (3 samples, 0.08%)</title><rect x="829.8" y="229" width="1.0" height="15.0" fill="rgb(212,147,17)" rx="2" ry="2" />
<text  x="832.82" y="239.5" ></text>
</g>
<g >
<title>_raw_spin_lock (47 samples, 1.27%)</title><rect x="279.3" y="277" width="15.0" height="15.0" fill="rgb(248,36,13)" rx="2" ry="2" />
<text  x="282.34" y="287.5" ></text>
</g>
<g >
<title>update_time (1 samples, 0.03%)</title><rect x="855.0" y="197" width="0.3" height="15.0" fill="rgb(205,101,11)" rx="2" ry="2" />
<text  x="858.00" y="207.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (32 samples, 0.86%)</title><rect x="33.3" y="357" width="10.2" height="15.0" fill="rgb(243,152,52)" rx="2" ry="2" />
<text  x="36.27" y="367.5" ></text>
</g>
<g >
<title>rcu_all_qs (1 samples, 0.03%)</title><rect x="906.0" y="181" width="0.3" height="15.0" fill="rgb(226,27,41)" rx="2" ry="2" />
<text  x="909.00" y="191.5" ></text>
</g>
<g >
<title>_dl_map_object (1 samples, 0.03%)</title><rect x="1166.4" y="389" width="0.3" height="15.0" fill="rgb(237,51,28)" rx="2" ry="2" />
<text  x="1169.41" y="399.5" ></text>
</g>
<g >
<title>iov_iter_fault_in_readable (1 samples, 0.03%)</title><rect x="1106.5" y="245" width="0.3" height="15.0" fill="rgb(250,215,33)" rx="2" ry="2" />
<text  x="1109.49" y="255.5" ></text>
</g>
<g >
<title>__strlen_avx2 (11 samples, 0.30%)</title><rect x="129.2" y="357" width="3.5" height="15.0" fill="rgb(246,192,15)" rx="2" ry="2" />
<text  x="132.21" y="367.5" ></text>
</g>
<g >
<title>iov_iter_advance (14 samples, 0.38%)</title><rect x="1062.8" y="229" width="4.5" height="15.0" fill="rgb(220,122,13)" rx="2" ry="2" />
<text  x="1065.82" y="239.5" ></text>
</g>
<g >
<title>balance_dirty_pages_ratelimited (23 samples, 0.62%)</title><rect x="881.1" y="229" width="7.4" height="15.0" fill="rgb(242,87,43)" rx="2" ry="2" />
<text  x="884.13" y="239.5" ></text>
</g>
<g >
<title>fsnotify_destroy_event.part.0 (1 samples, 0.03%)</title><rect x="607.6" y="229" width="0.4" height="15.0" fill="rgb(250,112,17)" rx="2" ry="2" />
<text  x="610.65" y="239.5" ></text>
</g>
<g >
<title>inotify_handle_inode_event (1,020 samples, 27.55%)</title><rect x="393.1" y="245" width="325.2" height="15.0" fill="rgb(228,222,38)" rx="2" ry="2" />
<text  x="396.13" y="255.5" >inotify_handle_inode_event</text>
</g>
<g >
<title>_IO_default_xsputn (14 samples, 0.38%)</title><rect x="115.5" y="357" width="4.5" height="15.0" fill="rgb(230,137,13)" rx="2" ry="2" />
<text  x="118.51" y="367.5" ></text>
</g>
<g >
<title>__wake_up (30 samples, 0.81%)</title><rect x="1032.9" y="165" width="9.5" height="15.0" fill="rgb(209,40,2)" rx="2" ry="2" />
<text  x="1035.86" y="175.5" ></text>
</g>
<g >
<title>stop_this_handle (1 samples, 0.03%)</title><rect x="1044.0" y="197" width="0.3" height="15.0" fill="rgb(219,215,22)" rx="2" ry="2" />
<text  x="1047.01" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="1166.4" y="357" width="0.3" height="15.0" fill="rgb(252,38,15)" rx="2" ry="2" />
<text  x="1169.41" y="367.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.03%)</title><rect x="1032.9" y="149" width="0.3" height="15.0" fill="rgb(232,54,2)" rx="2" ry="2" />
<text  x="1035.86" y="159.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (2 samples, 0.05%)</title><rect x="889.4" y="229" width="0.7" height="15.0" fill="rgb(246,113,5)" rx="2" ry="2" />
<text  x="892.42" y="239.5" ></text>
</g>
<g >
<title>_IO_old_init (7 samples, 0.19%)</title><rect x="21.5" y="373" width="2.2" height="15.0" fill="rgb(222,50,1)" rx="2" ry="2" />
<text  x="24.47" y="383.5" ></text>
</g>
<g >
<title>__block_commit_write.isra.0 (26 samples, 0.70%)</title><rect x="1052.0" y="181" width="8.3" height="15.0" fill="rgb(238,196,25)" rx="2" ry="2" />
<text  x="1054.98" y="191.5" ></text>
</g>
<g >
<title>_IO_old_init (3 samples, 0.08%)</title><rect x="11.3" y="357" width="0.9" height="15.0" fill="rgb(211,159,32)" rx="2" ry="2" />
<text  x="14.27" y="367.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (52 samples, 1.40%)</title><rect x="1080.7" y="213" width="16.5" height="15.0" fill="rgb(243,84,5)" rx="2" ry="2" />
<text  x="1083.67" y="223.5" ></text>
</g>
<g >
<title>__kmalloc (1 samples, 0.03%)</title><rect x="391.5" y="245" width="0.4" height="15.0" fill="rgb(211,101,24)" rx="2" ry="2" />
<text  x="394.54" y="255.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.03%)</title><rect x="1137.7" y="181" width="0.3" height="15.0" fill="rgb(237,27,8)" rx="2" ry="2" />
<text  x="1140.73" y="191.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (21 samples, 0.57%)</title><rect x="655.8" y="149" width="6.7" height="15.0" fill="rgb(207,187,22)" rx="2" ry="2" />
<text  x="658.78" y="159.5" ></text>
</g>
<g >
<title>_raw_spin_lock (36 samples, 0.97%)</title><rect x="565.6" y="229" width="11.5" height="15.0" fill="rgb(236,164,54)" rx="2" ry="2" />
<text  x="568.58" y="239.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.03%)</title><rect x="1175.0" y="261" width="0.3" height="15.0" fill="rgb(224,1,2)" rx="2" ry="2" />
<text  x="1178.02" y="271.5" ></text>
</g>
<g >
<title>generic_write_end (50 samples, 1.35%)</title><rect x="1044.3" y="213" width="16.0" height="15.0" fill="rgb(224,65,25)" rx="2" ry="2" />
<text  x="1047.33" y="223.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="515.9" y="197" width="0.3" height="15.0" fill="rgb(252,57,19)" rx="2" ry="2" />
<text  x="518.85" y="207.5" ></text>
</g>
<g >
<title>start_this_handle (1 samples, 0.03%)</title><rect x="958.6" y="197" width="0.3" height="15.0" fill="rgb(205,93,38)" rx="2" ry="2" />
<text  x="961.59" y="207.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="1042.4" y="165" width="0.3" height="15.0" fill="rgb(228,35,29)" rx="2" ry="2" />
<text  x="1045.42" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,856 samples, 77.15%)</title><rect x="237.9" y="373" width="910.3" height="15.0" fill="rgb(213,101,22)" rx="2" ry="2" />
<text  x="240.90" y="383.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>__vsnprintf_internal (7 samples, 0.19%)</title><rect x="1162.9" y="389" width="2.2" height="15.0" fill="rgb(211,120,45)" rx="2" ry="2" />
<text  x="1165.91" y="399.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (2 samples, 0.05%)</title><rect x="10.0" y="357" width="0.6" height="15.0" fill="rgb(224,36,28)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>__cond_resched (1 samples, 0.03%)</title><rect x="911.4" y="181" width="0.3" height="15.0" fill="rgb(243,44,16)" rx="2" ry="2" />
<text  x="914.42" y="191.5" ></text>
</g>
<g >
<title>_IO_no_init (2 samples, 0.05%)</title><rect x="10.6" y="357" width="0.7" height="15.0" fill="rgb(210,60,23)" rx="2" ry="2" />
<text  x="13.64" y="367.5" ></text>
</g>
<g >
<title>file_update_time (21 samples, 0.57%)</title><rect x="848.6" y="213" width="6.7" height="15.0" fill="rgb(235,125,1)" rx="2" ry="2" />
<text  x="851.62" y="223.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (8 samples, 0.22%)</title><rect x="242.0" y="357" width="2.6" height="15.0" fill="rgb(225,155,15)" rx="2" ry="2" />
<text  x="245.05" y="367.5" ></text>
</g>
<g >
<title>strcmp (8 samples, 0.22%)</title><rect x="604.8" y="213" width="2.5" height="15.0" fill="rgb(250,177,38)" rx="2" ry="2" />
<text  x="607.78" y="223.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_r14 (15 samples, 0.41%)</title><rect x="560.8" y="229" width="4.8" height="15.0" fill="rgb(254,81,54)" rx="2" ry="2" />
<text  x="563.79" y="239.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="594.9" y="149" width="0.3" height="15.0" fill="rgb(221,148,39)" rx="2" ry="2" />
<text  x="597.90" y="159.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (30 samples, 0.81%)</title><rect x="503.7" y="181" width="9.6" height="15.0" fill="rgb(210,188,5)" rx="2" ry="2" />
<text  x="506.74" y="191.5" ></text>
</g>
<g >
<title>__x64_sys_write (2,794 samples, 75.47%)</title><rect x="246.8" y="341" width="890.6" height="15.0" fill="rgb(217,51,54)" rx="2" ry="2" />
<text  x="249.83" y="351.5" >__x64_sys_write</text>
</g>
<g >
<title>apparmor_file_permission (33 samples, 0.89%)</title><rect x="1124.0" y="261" width="10.5" height="15.0" fill="rgb(207,107,8)" rx="2" ry="2" />
<text  x="1127.02" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,833 samples, 76.53%)</title><rect x="244.6" y="357" width="903.0" height="15.0" fill="rgb(232,166,40)" rx="2" ry="2" />
<text  x="247.60" y="367.5" >do_syscall_64</text>
</g>
<g >
<title>try_to_wake_up (17 samples, 0.46%)</title><rect x="589.5" y="133" width="5.4" height="15.0" fill="rgb(247,115,30)" rx="2" ry="2" />
<text  x="592.48" y="143.5" ></text>
</g>
<g >
<title>dget_parent (1 samples, 0.03%)</title><rect x="768.9" y="293" width="0.4" height="15.0" fill="rgb(243,84,19)" rx="2" ry="2" />
<text  x="771.94" y="303.5" ></text>
</g>
<g >
<title>__cond_resched (2 samples, 0.05%)</title><rect x="901.5" y="197" width="0.7" height="15.0" fill="rgb(210,108,8)" rx="2" ry="2" />
<text  x="904.53" y="207.5" ></text>
</g>
<g >
<title>memset_erms (50 samples, 1.35%)</title><rect x="928.3" y="181" width="15.9" height="15.0" fill="rgb(247,9,50)" rx="2" ry="2" />
<text  x="931.31" y="191.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (1 samples, 0.03%)</title><rect x="515.9" y="117" width="0.3" height="15.0" fill="rgb(253,229,40)" rx="2" ry="2" />
<text  x="518.85" y="127.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (6 samples, 0.16%)</title><rect x="1148.2" y="373" width="2.0" height="15.0" fill="rgb(216,130,15)" rx="2" ry="2" />
<text  x="1151.24" y="383.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (121 samples, 3.27%)</title><rect x="1004.2" y="197" width="38.5" height="15.0" fill="rgb(245,172,10)" rx="2" ry="2" />
<text  x="1007.17" y="207.5" >jbd..</text>
</g>
<g >
<title>fsnotify_handle_inode_event.isra.0 (1,034 samples, 27.93%)</title><rect x="390.9" y="261" width="329.6" height="15.0" fill="rgb(239,160,48)" rx="2" ry="2" />
<text  x="393.90" y="271.5" >fsnotify_handle_inode_event.isra.0</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="237.6" y="373" width="0.3" height="15.0" fill="rgb(226,178,7)" rx="2" ry="2" />
<text  x="240.59" y="383.5" ></text>
</g>
<g >
<title>__fdget_pos (2 samples, 0.05%)</title><rect x="246.8" y="325" width="0.7" height="15.0" fill="rgb(239,89,7)" rx="2" ry="2" />
<text  x="249.83" y="335.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (2 samples, 0.05%)</title><rect x="1147.6" y="357" width="0.6" height="15.0" fill="rgb(244,180,26)" rx="2" ry="2" />
<text  x="1150.61" y="367.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1137.7" y="293" width="0.3" height="15.0" fill="rgb(244,20,25)" rx="2" ry="2" />
<text  x="1140.73" y="303.5" ></text>
</g>
<g >
<title>do_open.isra.0 (1 samples, 0.03%)</title><rect x="1166.4" y="245" width="0.3" height="15.0" fill="rgb(252,220,6)" rx="2" ry="2" />
<text  x="1169.41" y="255.5" ></text>
</g>
<g >
<title>refill_obj_stock (4 samples, 0.11%)</title><rect x="558.6" y="197" width="1.2" height="15.0" fill="rgb(226,14,45)" rx="2" ry="2" />
<text  x="561.56" y="207.5" ></text>
</g>
<g >
<title>__fdget_pos (1 samples, 0.03%)</title><rect x="249.7" y="309" width="0.3" height="15.0" fill="rgb(228,202,40)" rx="2" ry="2" />
<text  x="252.70" y="319.5" ></text>
</g>
<g >
<title>mark_buffer_dirty (3 samples, 0.08%)</title><rect x="1059.3" y="165" width="1.0" height="15.0" fill="rgb(254,58,48)" rx="2" ry="2" />
<text  x="1062.31" y="175.5" ></text>
</g>
<g >
<title>ext4_journal_check_start (13 samples, 0.35%)</title><rect x="902.2" y="197" width="4.1" height="15.0" fill="rgb(206,110,10)" rx="2" ry="2" />
<text  x="905.17" y="207.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (93 samples, 2.51%)</title><rect x="968.2" y="213" width="29.6" height="15.0" fill="rgb(221,139,4)" rx="2" ry="2" />
<text  x="971.15" y="223.5" >gr..</text>
</g>
<g >
<title>__wake_up (57 samples, 1.54%)</title><rect x="584.4" y="213" width="18.1" height="15.0" fill="rgb(209,186,45)" rx="2" ry="2" />
<text  x="587.38" y="223.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (21 samples, 0.57%)</title><rect x="648.4" y="149" width="6.7" height="15.0" fill="rgb(249,45,3)" rx="2" ry="2" />
<text  x="651.45" y="159.5" ></text>
</g>
<g >
<title>_IO_setb (2 samples, 0.05%)</title><rect x="23.7" y="373" width="0.6" height="15.0" fill="rgb(238,7,45)" rx="2" ry="2" />
<text  x="26.71" y="383.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (29 samples, 0.78%)</title><rect x="120.0" y="357" width="9.2" height="15.0" fill="rgb(223,100,49)" rx="2" ry="2" />
<text  x="122.97" y="367.5" ></text>
</g>
<g >
<title>woken_wake_function (19 samples, 0.51%)</title><rect x="589.2" y="165" width="6.0" height="15.0" fill="rgb(237,138,16)" rx="2" ry="2" />
<text  x="592.16" y="175.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (128 samples, 3.46%)</title><rect x="1003.5" y="213" width="40.8" height="15.0" fill="rgb(249,19,13)" rx="2" ry="2" />
<text  x="1006.53" y="223.5" >__e..</text>
</g>
<g >
<title>__vsnprintf_internal (252 samples, 6.81%)</title><rect x="28.5" y="373" width="80.3" height="15.0" fill="rgb(226,70,11)" rx="2" ry="2" />
<text  x="31.49" y="383.5" >__vsnprin..</text>
</g>
<g >
<title>malloc (21 samples, 0.57%)</title><rect x="1179.2" y="389" width="6.7" height="15.0" fill="rgb(232,154,50)" rx="2" ry="2" />
<text  x="1182.16" y="399.5" ></text>
</g>
<g >
<title>xas_start (16 samples, 0.43%)</title><rect x="992.7" y="181" width="5.1" height="15.0" fill="rgb(228,30,40)" rx="2" ry="2" />
<text  x="995.70" y="191.5" ></text>
</g>
<g >
<title>common_file_perm (6 samples, 0.16%)</title><rect x="1134.5" y="261" width="2.0" height="15.0" fill="rgb(224,158,19)" rx="2" ry="2" />
<text  x="1137.54" y="271.5" ></text>
</g>
<g >
<title>main (9 samples, 0.24%)</title><rect x="1176.3" y="389" width="2.9" height="15.0" fill="rgb(234,189,29)" rx="2" ry="2" />
<text  x="1179.29" y="399.5" ></text>
</g>
<g >
<title>_raw_read_lock (3 samples, 0.08%)</title><rect x="911.7" y="181" width="1.0" height="15.0" fill="rgb(238,214,52)" rx="2" ry="2" />
<text  x="914.73" y="191.5" ></text>
</g>
<g >
<title>__cond_resched (4 samples, 0.11%)</title><rect x="322.1" y="261" width="1.2" height="15.0" fill="rgb(250,53,46)" rx="2" ry="2" />
<text  x="325.05" y="271.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (347 samples, 9.37%)</title><rect x="890.1" y="229" width="110.6" height="15.0" fill="rgb(212,137,9)" rx="2" ry="2" />
<text  x="893.06" y="239.5" >ext4_da_write..</text>
</g>
<g >
<title>ext4_file_write_iter (1,013 samples, 27.36%)</title><rect x="792.8" y="277" width="322.9" height="15.0" fill="rgb(241,207,49)" rx="2" ry="2" />
<text  x="795.84" y="287.5" >ext4_file_write_iter</text>
</g>
<g >
<title>memcg_slab_free_hook (105 samples, 2.84%)</title><rect x="629.0" y="165" width="33.5" height="15.0" fill="rgb(216,47,36)" rx="2" ry="2" />
<text  x="632.01" y="175.5" >me..</text>
</g>
<g >
<title>obj_cgroup_charge (4 samples, 0.11%)</title><rect x="715.1" y="229" width="1.2" height="15.0" fill="rgb(207,196,43)" rx="2" ry="2" />
<text  x="718.07" y="239.5" ></text>
</g>
<g >
<title>wait_for_stable_page (4 samples, 0.11%)</title><rect x="999.4" y="213" width="1.3" height="15.0" fill="rgb(217,163,15)" rx="2" ry="2" />
<text  x="1002.39" y="223.5" ></text>
</g>
<g >
<title>__wake_up_common (27 samples, 0.73%)</title><rect x="586.6" y="181" width="8.6" height="15.0" fill="rgb(246,123,23)" rx="2" ry="2" />
<text  x="589.61" y="191.5" ></text>
</g>
<g >
<title>obj_cgroup_charge_pages (8 samples, 0.22%)</title><rect x="556.0" y="197" width="2.6" height="15.0" fill="rgb(250,6,21)" rx="2" ry="2" />
<text  x="559.01" y="207.5" ></text>
</g>
<g >
<title>__snprintf (12 samples, 0.32%)</title><rect x="1159.1" y="389" width="3.8" height="15.0" fill="rgb(215,101,37)" rx="2" ry="2" />
<text  x="1162.08" y="399.5" ></text>
</g>
<g >
<title>_init (1 samples, 0.03%)</title><rect x="1166.7" y="389" width="0.4" height="15.0" fill="rgb(245,156,28)" rx="2" ry="2" />
<text  x="1169.73" y="399.5" ></text>
</g>
<g >
<title>memcg_slab_free_hook (5 samples, 0.14%)</title><rect x="1026.2" y="165" width="1.6" height="15.0" fill="rgb(229,48,27)" rx="2" ry="2" />
<text  x="1029.16" y="175.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.03%)</title><rect x="1137.7" y="261" width="0.3" height="15.0" fill="rgb(240,120,13)" rx="2" ry="2" />
<text  x="1140.73" y="271.5" ></text>
</g>
<g >
<title>add_transaction_credits (17 samples, 0.46%)</title><rect x="953.2" y="165" width="5.4" height="15.0" fill="rgb(212,59,17)" rx="2" ry="2" />
<text  x="956.17" y="175.5" ></text>
</g>
<g >
<title>x86_pmu_disable (1 samples, 0.03%)</title><rect x="1137.7" y="149" width="0.3" height="15.0" fill="rgb(254,2,23)" rx="2" ry="2" />
<text  x="1140.73" y="159.5" ></text>
</g>
<g >
<title>__const_udelay (1 samples, 0.03%)</title><rect x="1137.7" y="101" width="0.3" height="15.0" fill="rgb(215,54,35)" rx="2" ry="2" />
<text  x="1140.73" y="111.5" ></text>
</g>
<g >
<title>_int_free (15 samples, 0.41%)</title><rect x="173.5" y="373" width="4.8" height="15.0" fill="rgb(249,70,27)" rx="2" ry="2" />
<text  x="176.52" y="383.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="515.9" y="213" width="0.3" height="15.0" fill="rgb(254,139,37)" rx="2" ry="2" />
<text  x="518.85" y="223.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (1 samples, 0.03%)</title><rect x="1146.3" y="309" width="0.4" height="15.0" fill="rgb(224,56,26)" rx="2" ry="2" />
<text  x="1149.33" y="319.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (3 samples, 0.08%)</title><rect x="32.3" y="357" width="1.0" height="15.0" fill="rgb(220,213,41)" rx="2" ry="2" />
<text  x="35.31" y="367.5" ></text>
</g>
<g >
<title>__cond_resched (6 samples, 0.16%)</title><rect x="863.9" y="229" width="1.9" height="15.0" fill="rgb(206,32,4)" rx="2" ry="2" />
<text  x="866.92" y="239.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (25 samples, 0.68%)</title><rect x="1072.7" y="213" width="8.0" height="15.0" fill="rgb(205,24,39)" rx="2" ry="2" />
<text  x="1075.70" y="223.5" ></text>
</g>
<g >
<title>fsnotify_add_event (1 samples, 0.03%)</title><rect x="391.9" y="245" width="0.3" height="15.0" fill="rgb(231,154,50)" rx="2" ry="2" />
<text  x="394.86" y="255.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (1 samples, 0.03%)</title><rect x="855.0" y="117" width="0.3" height="15.0" fill="rgb(217,84,29)" rx="2" ry="2" />
<text  x="858.00" y="127.5" ></text>
</g>
<g >
<title>__cond_resched (1 samples, 0.03%)</title><rect x="249.4" y="309" width="0.3" height="15.0" fill="rgb(234,132,16)" rx="2" ry="2" />
<text  x="252.38" y="319.5" ></text>
</g>
<g >
<title>kmem_cache_free (4 samples, 0.11%)</title><rect x="1042.7" y="197" width="1.3" height="15.0" fill="rgb(246,77,45)" rx="2" ry="2" />
<text  x="1045.74" y="207.5" ></text>
</g>
<g >
<title>wait_for_stable_page (6 samples, 0.16%)</title><rect x="1104.6" y="229" width="1.9" height="15.0" fill="rgb(253,32,42)" rx="2" ry="2" />
<text  x="1107.58" y="239.5" ></text>
</g>
<g >
<title>fsnotify_destroy_event (183 samples, 4.94%)</title><rect x="608.0" y="229" width="58.3" height="15.0" fill="rgb(251,29,25)" rx="2" ry="2" />
<text  x="610.97" y="239.5" >fsnoti..</text>
</g>
<g >
<title>generic_write_checks (3 samples, 0.08%)</title><rect x="844.2" y="213" width="0.9" height="15.0" fill="rgb(228,159,20)" rx="2" ry="2" />
<text  x="847.16" y="223.5" ></text>
</g>
<g >
<title>__block_commit_write.isra.0 (4 samples, 0.11%)</title><rect x="1049.4" y="197" width="1.3" height="15.0" fill="rgb(214,72,29)" rx="2" ry="2" />
<text  x="1052.43" y="207.5" ></text>
</g>
<g >
<title>__vsprintf_internal (202 samples, 5.46%)</title><rect x="108.8" y="373" width="64.4" height="15.0" fill="rgb(223,83,46)" rx="2" ry="2" />
<text  x="111.81" y="383.5" >__vspri..</text>
</g>
<g >
<title>crypto_shash_update (1 samples, 0.03%)</title><rect x="855.0" y="53" width="0.3" height="15.0" fill="rgb(247,192,37)" rx="2" ry="2" />
<text  x="858.00" y="63.5" ></text>
</g>
<g >
<title>try_charge (2 samples, 0.05%)</title><rect x="557.9" y="181" width="0.7" height="15.0" fill="rgb(248,64,43)" rx="2" ry="2" />
<text  x="560.93" y="191.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (14 samples, 0.38%)</title><rect x="1117.0" y="277" width="4.5" height="15.0" fill="rgb(206,28,48)" rx="2" ry="2" />
<text  x="1120.01" y="287.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_r11 (8 samples, 0.22%)</title><rect x="804.0" y="245" width="2.5" height="15.0" fill="rgb(208,5,18)" rx="2" ry="2" />
<text  x="807.00" y="255.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (49 samples, 1.32%)</title><rect x="912.7" y="181" width="15.6" height="15.0" fill="rgb(228,211,48)" rx="2" ry="2" />
<text  x="915.69" y="191.5" ></text>
</g>
<g >
<title>file_modified (32 samples, 0.86%)</title><rect x="845.1" y="229" width="10.2" height="15.0" fill="rgb(237,112,27)" rx="2" ry="2" />
<text  x="848.12" y="239.5" ></text>
</g>
<g >
<title>ext4_fc_stop_update (4 samples, 0.11%)</title><rect x="1106.8" y="261" width="1.3" height="15.0" fill="rgb(226,141,12)" rx="2" ry="2" />
<text  x="1109.81" y="271.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (3 samples, 0.08%)</title><rect x="1146.7" y="325" width="0.9" height="15.0" fill="rgb(227,152,22)" rx="2" ry="2" />
<text  x="1149.65" y="335.5" ></text>
</g>
<g >
<title>fsnotify_handle_inode_event.isra.0 (1 samples, 0.03%)</title><rect x="724.6" y="277" width="0.3" height="15.0" fill="rgb(254,142,44)" rx="2" ry="2" />
<text  x="727.63" y="287.5" ></text>
</g>
<g >
<title>jbd2__journal_start (2 samples, 0.05%)</title><rect x="997.8" y="213" width="0.6" height="15.0" fill="rgb(237,69,20)" rx="2" ry="2" />
<text  x="1000.80" y="223.5" ></text>
</g>
<g >
<title>__mod_memcg_state (41 samples, 1.11%)</title><rect x="500.2" y="197" width="13.1" height="15.0" fill="rgb(230,225,4)" rx="2" ry="2" />
<text  x="503.23" y="207.5" ></text>
</g>
<g >
<title>_IO_no_init (29 samples, 0.78%)</title><rect x="12.2" y="373" width="9.3" height="15.0" fill="rgb(205,23,33)" rx="2" ry="2" />
<text  x="15.23" y="383.5" ></text>
</g>
<g >
<title>ktime_get_coarse_real_ts64 (5 samples, 0.14%)</title><rect x="851.8" y="181" width="1.6" height="15.0" fill="rgb(251,55,47)" rx="2" ry="2" />
<text  x="854.81" y="191.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (12 samples, 0.32%)</title><rect x="1037.6" y="133" width="3.9" height="15.0" fill="rgb(254,121,29)" rx="2" ry="2" />
<text  x="1040.64" y="143.5" ></text>
</g>
<g >
<title>amd_pmu_disable_all (1 samples, 0.03%)</title><rect x="1137.7" y="133" width="0.3" height="15.0" fill="rgb(227,195,11)" rx="2" ry="2" />
<text  x="1140.73" y="143.5" ></text>
</g>
</g>
</svg>
